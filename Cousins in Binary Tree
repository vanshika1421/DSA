/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode xparents = null , yparents = null;
    private int xDepth = -1 , yDepth =-1;
    public boolean isCousins(TreeNode root, int x, int y) {
        dfs(root , null , 0 , x , y);
        return xDepth == yDepth && xparents != yparents;
    }
    private void dfs(TreeNode root , TreeNode parents , int depth , int x ,int y){
        if(root == null) return;
        if(root.val == x){
            xparents = parents;
            xDepth = depth;
        }
        if(root.val == y){
            yparents = parents;
            yDepth = depth;
        }
        dfs(root.left , root , depth +1 , x , y);
        dfs(root.right , root , depth+1 ,x , y);
    }
}
